##  -*-  coding: utf-8; mode: ruby -*-  ##
##  vi: set ft=ruby

load  File.expand_path("DetectOS.rb")  if File.exists?("DetectOS.rb")

Vagrant.configure("2") do |config|
  config.vm.box = "takahiro-itou/ubuntu-bionic64-pbspro"

  format_private_name = "node%02d"
  format_private_ip = "192.168.64.%d"

  (0..1).each  do  |i|
    ip = format_private_ip % [100 + i]
    name = format_private_name % [i]

    config.vm.define  name  do  |node|
      node.vm.hostname = name

      if (i == 0)
        node.vm.network("private_network", ip: "192.168.33.110")
      end
      node.vm.network("private_network", ip: ip,
                      virtualbox__intnet: "vmnet")

      node.vm.provider  "virtualbox"  do  |v|
        v.name   = "%s-ubuntu-pbspro" % name
        v.memory = "2048"

        v.gui    = false
        v.customize [
          "modifyvm",               :id,
          "--cableconnected1",      "on",
          "--hwvirtex",             "on",
          "--nestedpaging",         "on",
          "--largepages",           "on",
          "--ioapic",               "on",
          "--pae",                  "on",
          "--paravirtprovider",     "kvm",
        ]

        if  DetectOS.windows?
          tty_log = "W:/Vagrant/ubuntu-pbspro/vagrant/vagrant-tty.%s.log"
        else
          tty_log = "/tmp/vagrant-tty.%s.log"
        end
        tty_log_file = tty_log % [name]
        v.customize [
          "modifyvm",     :id,
          "--uartmode1",  "file",     tty_log_file,
          "--uart1",      "0x3F8",    "4",
        ]
      end

      node.vm.boot_timeout = 900

      node.vm.provision("file",
                        source:       "../data/",
                        destination:  "/tmp/")

      node.vm.provision("root", type: "shell",
                        path: "provision.root.sh",
                        privileged: true)
      node.vm.synced_folder(".", "/vagrant", disabled: true)
    end
  end

end
